{"version":3,"sources":["components/Input.js","components/Task.js","App.js","reportWebVitals.js","index.js"],"names":["Input","inputValue","tasks","setTask","setSelectItems","setInputValue","useState","warning","setWarning","selectValue","setSelectValue","useEffect","filter","el","checked","selectSwitch","className","style","color","fontSize","type","onChange","e","target","value","onClick","preventDefault","task","id","Math","random","Task","selectItems","editTrue","setEditTrue","editInputValue","setEditInputValue","map","textDecoration","onClickCheckHandler","onClickTrashHadndler","App","JSON","parse","window","localStorage","getItem","setLocalStorage","getLocalStorage","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd3ac55a.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\"\r\n\r\nconst Input = ({ inputValue, tasks, setTask, setSelectItems, setInputValue }) => {\r\n\r\n  const [warning, setWarning] = useState(false)\r\n  const [selectValue, setSelectValue] = useState('')\r\n\r\n\r\n\r\n  const inputHandler = (e) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  const onClickHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (inputValue === '') { return setWarning(true) }\r\n    else {\r\n      setTask([...tasks, { task: inputValue, checked: false, id: Math.random() }])\r\n      setInputValue('')\r\n      setWarning(false)\r\n    }\r\n  }\r\n\r\n\r\n  const select = (e) => {\r\n    setSelectValue(e.target.value)\r\n  }\r\n\r\n  const selectSwitch = () => {\r\n    switch (selectValue) {\r\n      case \"Checked\":\r\n        setSelectItems(tasks.filter((el) => el.checked === true))\r\n        break;\r\n      case \"Unchecked\":\r\n        setSelectItems(tasks.filter((el) => el.checked === false))\r\n        break;\r\n      default:\r\n        setSelectItems([...tasks])\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    selectSwitch()\r\n  }, [tasks, selectValue])\r\n\r\n  return (\r\n    <div className='input'>\r\n      <h1 style={{ color: warning ? \"red\" : \"white\", fontSize: warning ? \"40px\" : \"32px\" }}>Dodaj zadanie</h1>\r\n      <form type='submit'>\r\n        <input type=\"text\" onChange={inputHandler} value={inputValue} />\r\n        <button onClick={onClickHandler}><i className=\"fas fa-plus\"></i></button>\r\n        <select onChange={select} >\r\n          <option>All</option>\r\n          <option>Checked</option>\r\n          <option>Unchecked</option>\r\n        </select>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input","import { useState } from \"react\"\r\n\r\nconst Task = ({ tasks, setTask, selectItems }) => {\r\n  const [editTrue, setEditTrue] = useState(false)\r\n  const [editInputValue, setEditInputValue] = useState('')\r\n\r\n  const onClickCheckHandler = (id) => {\r\n\r\n    setTask(tasks.map(el => {\r\n      if (el.id === id) {\r\n        return { ...el, checked: !el.checked }\r\n      } else {\r\n        return { ...el }\r\n      }\r\n\r\n    }))\r\n\r\n  }\r\n\r\n  const onClickTrashHadndler = (id) => {\r\n    setTask(tasks.filter(task => task.id !== id))\r\n  }\r\n\r\n  const onClickEdit = () => {\r\n    setEditTrue(!editTrue)\r\n    if (editTrue === true) {\r\n      setEditInputValue('')\r\n    }\r\n  }\r\n\r\n\r\n  const changeEditValue = (id) => {\r\n\r\n    <input type=\"text\" value={editInputValue} onChange={(e) => setEditInputValue(e.target.value)} />\r\n\r\n    setTask(tasks.map(el => {\r\n      if (el.id === id) {\r\n        return { ...el, task: editInputValue }\r\n      } else {\r\n        return { ...el }\r\n      }\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <ul className='task-list'>\r\n      {selectItems.map(task =>\r\n        <li className=\"task\" key={task.id}>\r\n          <p style={{ textDecoration: task.checked ? \"line-through\" : \"none\" }}>{editTrue ?\r\n            changeEditValue(task.id)\r\n            :\r\n            task.task}</p>\r\n          <button className='check' onClick={() => onClickCheckHandler(task.id)}><i className=\"fas fa-check\"></i></button>\r\n          <button className='trash' onClick={() => onClickTrashHadndler(task.id)}><i className=\"far fa-trash-alt\"></i></button>\r\n          <button className='edit' onClick={() => onClickEdit()} ><i className=\"far fa-edit\"></i></button>\r\n        </li>)}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Task","import { useState, useEffect } from 'react';\nimport './assets/style/App.sass';\nimport Input from './components/Input';\nimport Task from './components/Task';\n\nfunction App() {\n\n\n  const [tasks, setTask] = useState(JSON.parse(window.localStorage.getItem('task') || []))\n  const [selectItems, setSelectItems] = useState([])\n  const [inputValue, setInputValue] = useState('')\n\n  useEffect(() => {\n    setLocalStorage()\n  }, [tasks])\n\n  useEffect(() => {\n    getLocalStorage()\n  }, [])\n\n  const setLocalStorage = () => {\n    window.localStorage.setItem(\"task\", JSON.stringify(tasks))\n  }\n\n  const getLocalStorage = () => {\n    if (window.localStorage.getItem('task') === null) {\n      window.localStorage.setItem(\"task\", JSON.stringify([]))\n    } else {\n      setTask(JSON.parse(window.localStorage.getItem('task')))\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Input inputValue={inputValue} setInputValue={setInputValue} tasks={tasks} setTask={setTask} selectItems={selectItems} setSelectItems={setSelectItems} />\n      <Task inputValue={inputValue} setInputValue={setInputValue} tasks={tasks} setTask={setTask} selectItems={selectItems} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}